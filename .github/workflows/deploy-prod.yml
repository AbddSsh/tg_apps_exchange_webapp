name: Production Tag Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    # Pattern matched against refs/tags
    tags:        
      - '*' # Push events to every tag not containing /
jobs:
  Deploy-Production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

# name: Deploy to production
# on:
#   push:
#     tags:
#       - 'v*'
# permissions:
#   contents: write

# jobs:
#   Deploy-Production:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3
#       - name: Release to production
#         run: |
#           git push origin HEAD:main -f

# name: "Deploy"

# on:
#   release:
#     types:
#       - published
#   push:
#     branches:
#       - dev
#   workflow_dispatch:

# jobs:
#   vercel: 
#     runs-on: ubuntu-latest
#     name: "Deploy front-end"
    
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-node@v1
#         with:
#           node-version: '20'
#           registry-url: https://registry.npmjs.org/

#       - name: "Deploy to Vercel"
#         run: |
#           prodRun=""
#           if [[ ${GITHUB_REF} == "refs/heads/main" ]]; then
#             prodRun="--prod"
#           fi

#           npx vercel --token ${VERCEL_TOKEN} $prodRun          
#         env:
#           VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
#           VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
#           VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
